# Define variables
cc = arm-none-eabi-gcc
ach = cortex-m3
cflags = -c -mcpu=$(ach) -std=gnu11 -mthumb 
lflags = -T stm32f103c8_flash.ld -nostdlib -Wl,-Map=Executable.map

# Compile object files
main.o: main.c
	$(cc) $(cflags) $^ -o $@

lcd.o: lcd.c
	$(cc) $(cflags) $^ -o $@

startup_stm32f103xb.o: startup_stm32f103xb.c
	$(cc) $(cflags) $^ -o $@

Stm32_F103C6_GPIO.o: Stm32_F103C6_GPIO.c
	$(cc) $(cflags) $^ -o $@


# Link object files into the final executable
Executable.elf: main.o lcd.o startup_stm32f103xb.o Stm32_F103C6_GPIO.o
	$(cc) $(lflags) $^ -o $@

# Build everything
all: Executable.elf

# Clean up
clean:
	rm -rf *.o Executable.elf

